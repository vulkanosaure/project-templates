package $(PackageName);

import com.vinc.display.VButton;
import com.vinc.display.VImage;
import com.vinc.layout.LayoutManager;
import com.vinc.time.DelayManager;
import openfl.display.BitmapData;
import openfl.display.Sprite;
import openfl.display.StageAlign;
import openfl.display.StageScaleMode;
import openfl.display3D.Context3DRenderMode;
import starling.core.Starling;
import starling.events.Event;
import starling.textures.RenderTexture;
import starling.utils.AssetManager;
import starling.utils.Max;

#if html5 
import js.Browser;
#end


/**
$(CBI)* ...
$(CBI)* @author $(DefaultUser)
$(CBI)*/
class Main extends Sprite $(CSLB){
	
	private var mStarling:Starling;
	var starlingRoot:StarlingRoot;
	var params:Dynamic;
	var rootPath:String;

	public function new() $(CSLB){
		
		super();
        if (stage != null) start();
        else addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);
	}
	
	
	
    private function onAddedToStage(event:Dynamic):Void
    {
        removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);
		
		start();
    }
	
	
	
	private function start():Void
	{
		trace("Main.start, debug:" + Constants.DEBUG_MODE);

		params = this.stage.loaderInfo.parameters;
		if (params == null) params = {};
		
		rootPath = (params.rootPath != null) ? params.rootPath : "";
		
		#if html5
		var localPrefixes:Array<String> = ["http://localhost", "http://192.168."];
		Constants.LOCALHOST = false;
		for (i in 0...localPrefixes.length){
			var prefix:String = localPrefixes[i];
			if (Browser.window.location.href.indexOf(prefix) != -1) Constants.LOCALHOST = true;
		}
		#end
		
		
		stage.scaleMode = StageScaleMode.NO_SCALE;
		stage.align = StageAlign.TOP_LEFT;
		
		this.stage.addEventListener(Event.RESIZE, LayoutManager.onResize, false, Max.INT_MAX_VALUE, true);
		
		//Starling.multitouchEnabled = true; 	// for Multitouch Scene
		Starling.handleLostContext = true; 		// recommended everywhere when using AssetManager
		
		RenderTexture.optimizePersistentBuffers = true; // should be safe on Desktop
		
		mStarling = new Starling(StarlingRoot, stage, null, null, Context3DRenderMode.AUTO, "auto");
		//mStarling.simulateMultitouch = true;
		mStarling.enableErrorChecking = Constants.DEBUG_MODE;
		
		//mStarling.antiAliasing = 0;		//0 = no antialiasing
		mStarling.antiAliasing = 16;		//16 = max
		
		
		mStarling.addEventListener(Event.ROOT_CREATED, function():Void
		{
			
			trace("rootPath : " + rootPath);
			LoaderManager.preload(preloadReady, rootPath);
			
		});
		
		trace("Constants.LOCALHOST : " + Constants.LOCALHOST);
		if (!Constants.DEBUG_MODE && Constants.LOCALHOST) Starling.current.showStats = !Starling.current.showStats;
		
		mStarling.start();
		
	}

	private function preloadReady(assets:AssetManager):Void
	{
		trace("Main.preloadReady");

		VButton.assets = assets;
		VImage.assets = assets;

		starlingRoot = cast(mStarling.root, StarlingRoot);
		starlingRoot.preload(stage, mStarling);

		DelayManager.add("", 800, loadStart);

	}

	private function loadStart():Void
	{
		LoaderManager.load(loadComplete, loadProgress, rootPath);
	}

	private function loadProgress(ratio:Float):Void
	{
		//trace("Main.loadProgress(" + ratio + ")");
		starlingRoot.loadProgress(ratio);
	}

	private function loadComplete(assets:AssetManager):Void
	{
		trace("Main.loadComplete");
		
		starlingRoot.loadComplete();
		
		DelayManager.add("", 500, function()
		{
			starlingRoot.start(stage, mStarling);
			
		});

	}

}
